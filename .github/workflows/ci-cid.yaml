name: CI/CD Pipeline

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  workflow_dispatch: 

jobs:
  build-and-redeploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          submodules: false

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/v2.10.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose

      - name: Install Loki logging plugin
        run: |
          docker plugin install grafana/loki-docker-driver:latest --alias loki --grant-all-permissions

      - name: Build Docker Image
        run: |
          docker build -t flask-app:latest .

      - name: Run Docker Compose
        run: |
          docker-compose up -d

      - name: Wait for service to be ready
        run: |
          for i in {1..30}; do
            if curl -f http://localhost:8080/docs; then
              echo "Service is ready!"
              exit 0
            fi
            sleep 1
          done
          echo "Service did not become ready after 30 attempts."
          exit 1

      - name: Fetch Docker logs from application container
        run: |
          CONTAINER_ID=$(docker ps -q --filter "ancestor=flask-app:latest")
          if [ -n "$CONTAINER_ID" ]; then
            echo "Fetching logs from container with ID: $CONTAINER_ID"
            docker logs $CONTAINER_ID --tail 100
          else
            echo "No container found running flask-app."
            exit 1
          fi
