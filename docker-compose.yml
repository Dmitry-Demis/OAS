version: "3.8"

services:
  # Сервис для FastAPI приложения
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: fastapi_app
    ports:
      - "8000:8000"  # Проброс порта для доступа к приложению
    environment:
      - OTEL_EXPORTER_JAEGER_AGENT_HOST=jaeger
      - OTEL_EXPORTER_JAEGER_AGENT_PORT=6831
    depends_on:
      - jaeger  # Зависимость от Jaeger
    networks:
      - monitoring

  # Сервис Jaeger для трассировки
  jaeger:
    image: jaegertracing/all-in-one:1.41
    container_name: jaeger
    ports:
      - "16686:16686"  # Проброс порта для интерфейса Jaeger
      - "6831:6831/udp"  # Проброс порта для получения данных Jaeger
    networks:
      - monitoring

  # Сервис Prometheus для мониторинга
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml  # Монтируем конфигурацию Prometheus
    ports:
      - "9090:9090"  # Проброс порта для интерфейса Prometheus
    networks:
      - monitoring

  loki:
    image: grafana/loki:latest
    ports:
      - "3100:3100"
    volumes:
      - ./loki/loki.yml:/etc/loki/local-config.yml

      
  # Сервис Grafana для визуализации
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"  # Проброс порта для интерфейса Grafana
    networks:
      - monitoring
    depends_on:
      - prometheus  # Зависимость от Prometheus
      - loki
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin  # Устанавливаем пароль администратора для Grafana
      - GF_INSTALL_PLUGINS=grafana-jaeger-datasource  # Устанавливаем плагин Jaeger в Grafana


# Сетевое подключение
networks:
  monitoring:
    driver: bridge  # Используем мостовую сеть для контейнеров
